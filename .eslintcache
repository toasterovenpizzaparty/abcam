[{"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/index.js":"1","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/App.js":"2","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/reportWebVitals.js":"3","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/redux/store.ts":"4","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/routes/index.tsx":"5","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/pages/index.ts":"6","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/pages/home.tsx":"7","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/pages/steps/index.ts":"8","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/index.ts":"9","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/form/index.ts":"10","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/providers/axios.tsx":"11","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/hooks/index.ts":"12","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/hooks/axios.tsx":"13","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/providers/step.tsx":"14","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/hooks/step.tsx":"15","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/redux/reducers/index.ts":"16","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/config/form-types.ts":"17","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/form/TextField/index.tsx":"18","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/form/Rating/index.tsx":"19","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/form/TextArea/index.tsx":"20","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/Title/Title.tsx":"21","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/Form/index.ts":"22","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/Form/TextField/index.tsx":"23","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/Form/TextArea/index.tsx":"24","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/Form/Rating/index.tsx":"25","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/Progressindicator/index.tsx":"26","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/ProgressIndicator/index.tsx":"27","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/redux/selectors/fields.ts":"28","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/redux/selectors/step.ts":"29","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/redux/selectors/index.ts":"30","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/redux/actions/fields.ts":"31","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/redux/actions/index.ts":"32","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/pages/step/step.tsx":"33","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/pages/steps/step-one/step-one.tsx":"34","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/pages/steps/step-two/step-two.tsx":"35","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/pages/steps/step-three/step-three.tsx":"36","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/pages/steps/step-four/step-four.tsx":"37","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/redux/reducers/step-reducer/step-reducer.ts":"38","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/redux/reducers/api-reducer/api-reducer.ts":"39","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/redux/selectors/api.ts":"40","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/redux/actions/review.ts":"41","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/Button/index.tsx":"42","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/Logo/index.tsx":"43","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/Form/ImageField/index.tsx":"44","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/ErrorMessage/index.tsx":"45","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/Card/index.tsx":"46","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/Paragraph/index.tsx":"47"},{"size":500,"mtime":1608234904151,"results":"48","hashOfConfig":"49"},{"size":637,"mtime":1609598507640,"results":"50","hashOfConfig":"49"},{"size":362,"mtime":1608234904152,"results":"51","hashOfConfig":"49"},{"size":718,"mtime":1609533605403,"results":"52","hashOfConfig":"49"},{"size":311,"mtime":1609585138092,"results":"53","hashOfConfig":"49"},{"size":53,"mtime":1609532764994,"results":"54","hashOfConfig":"49"},{"size":77,"mtime":1608841458092,"results":"55","hashOfConfig":"49"},{"size":154,"mtime":1609532773568,"results":"56","hashOfConfig":"49"},{"size":247,"mtime":1609609497494,"results":"57","hashOfConfig":"49"},{"size":83,"mtime":1609514011983,"results":"58","hashOfConfig":"49"},{"size":514,"mtime":1609511375999,"results":"59","hashOfConfig":"49"},{"size":49,"mtime":1609190894338,"results":"60","hashOfConfig":"49"},{"size":1474,"mtime":1609186342759,"results":"61","hashOfConfig":"49"},{"size":1817,"mtime":1609365794570,"results":"62","hashOfConfig":"49"},{"size":770,"mtime":1609192887447,"results":"63","hashOfConfig":"49"},{"size":327,"mtime":1609533581156,"results":"64","hashOfConfig":"49"},{"size":377,"mtime":1609529996740,"results":"65","hashOfConfig":"49"},{"size":252,"mtime":1609502385620,"results":"66","hashOfConfig":"49"},{"size":979,"mtime":1609504784528,"results":"67","hashOfConfig":"49"},{"size":345,"mtime":1609514034852,"results":"68","hashOfConfig":"49"},{"size":471,"mtime":1609609881168,"results":"69","hashOfConfig":"49"},{"size":113,"mtime":1609600689908,"results":"70","hashOfConfig":"49"},{"size":634,"mtime":1609598718376,"results":"71","hashOfConfig":"49"},{"size":696,"mtime":1609613340692,"results":"72","hashOfConfig":"49"},{"size":1170,"mtime":1609598683461,"results":"73","hashOfConfig":"49"},{"size":501,"mtime":1609514800457,"results":"74","hashOfConfig":"49"},{"size":1321,"mtime":1609597343176,"results":"75","hashOfConfig":"49"},{"size":1851,"mtime":1609587358340,"results":"76","hashOfConfig":"49"},{"size":274,"mtime":1609532959785,"results":"77","hashOfConfig":"49"},{"size":73,"mtime":1609533710502,"results":"78","hashOfConfig":"49"},{"size":774,"mtime":1609598037894,"results":"79","hashOfConfig":"49"},{"size":52,"mtime":1609534755256,"results":"80","hashOfConfig":"49"},{"size":5042,"mtime":1609613667638,"results":"81","hashOfConfig":"49"},{"size":1376,"mtime":1609597545755,"results":"82","hashOfConfig":"49"},{"size":785,"mtime":1609598971211,"results":"83","hashOfConfig":"49"},{"size":2002,"mtime":1609604170801,"results":"84","hashOfConfig":"49"},{"size":753,"mtime":1609606032601,"results":"85","hashOfConfig":"49"},{"size":3276,"mtime":1609585355107,"results":"86","hashOfConfig":"49"},{"size":1691,"mtime":1609534481747,"results":"87","hashOfConfig":"49"},{"size":99,"mtime":1609533702496,"results":"88","hashOfConfig":"49"},{"size":2374,"mtime":1609598145189,"results":"89","hashOfConfig":"49"},{"size":368,"mtime":1609594302502,"results":"90","hashOfConfig":"49"},{"size":190,"mtime":1609613628050,"results":"91","hashOfConfig":"49"},{"size":4499,"mtime":1609613414497,"results":"92","hashOfConfig":"49"},{"size":427,"mtime":1609602060054,"results":"93","hashOfConfig":"49"},{"size":1360,"mtime":1609613186078,"results":"94","hashOfConfig":"49"},{"size":179,"mtime":1609609475593,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"sqnifj",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"105"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"124"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"124"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"105"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"105"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":8,"source":"173","usedDeprecatedRules":"105"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"105"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"105"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"105"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"105"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"105"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/index.js",[],["209","210"],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/App.js",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/reportWebVitals.js",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/redux/store.ts",[],["211","212"],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/routes/index.tsx",["213","214"],"import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { Home, StepPage } from \"../pages\";\n\nexport default () => (\n  <Router>\n    <Switch>\n      <Route exact path='/' component={StepPage} />\n      <Route path='/step/:step/id/:id' component={StepPage} />\n    </Switch>\n  </Router>\n);\n","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/pages/index.ts",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/pages/home.tsx",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/pages/steps/index.ts",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/index.ts",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/form/index.ts",[],["215","216"],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/providers/axios.tsx",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/hooks/index.ts",[],["217","218"],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/hooks/axios.tsx",["219","220","221"],"import React, { useState, useEffect, useContext, useCallback } from \"react\";\nimport { AxiosRequestConfig, AxiosResponse, AxiosError } from \"axios\";\nimport { AxiosContext } from \"../providers/axios\";\n\ntype AxiosState = {\n  isLoading: boolean;\n  data?: AxiosResponse;\n  error?: AxiosError;\n};\n\nconst mergeConfigurations = (\n  configurationA: AxiosRequestConfig,\n  configurationB?: AxiosRequestConfig\n) => {\n  if (configurationA && configurationB) {\n    return { ...configurationA, ...configurationB };\n  }\n  return configurationA;\n};\n\nexport const useAxios = () => useContext(AxiosContext);\n\nexport const useAxiosCache = (config: AxiosRequestConfig) => {\n  const { client } = useContext(AxiosContext);\n  const [state, setState] = useState<AxiosState>({\n    isLoading: false,\n  });\n\n  const fetchData = useCallback(async (optionalConfig?: AxiosRequestConfig) => {\n    setState((state) => ({ ...state, isLoading: true }));\n    try {\n      const data = await client.request(\n        mergeConfigurations(config, optionalConfig)\n      );\n      setState({ data, isLoading: false });\n      return data;\n    } catch (error) {\n      setState({ error, isLoading: false });\n      return error;\n    }\n  }, []);\n\n  return { ...state, fetchData };\n};\n\n// Creates a hook that pulls in the API Response upon mount.\n/* export const useAxiosMount = (config: AxiosRequestConfig) => {\n  const axios = useAxios(config);\n\n  useEffect(() => {\n    axios.fetchData();\n  }, []);\n\n  return axios;\n}; */\n","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/providers/step.tsx",["222","223","224","225"],"import react, { createContext, useReducer, Reducer, useEffect } from \"react\";\nimport { AxiosResponse, AxiosError } from \"axios\";\n\ntype FormFields = {\n  [key: string]: string;\n};\n\ntype Step = {\n  formFields: FormFields;\n  isLoading: false;\n};\n\ntype State = {\n  [key: string]: Step;\n};\n\ntype FormFieldPayload = {\n  value: string;\n  stepKey: string;\n  formFieldKey: string;\n};\n\nexport enum ActionTypes {\n  HYDRATE,\n  SAVE_FORM_FIELD,\n}\n\nexport type Action = {\n  type: ActionTypes;\n  state?: State;\n  formFields?: FormFieldPayload;\n};\n\ntype StepProviderProps = {\n  children: React.ReactNode;\n  CACHE_KEY?: string;\n};\n\ntype StepContextType = {\n  state: State;\n  dispatch: react.Dispatch<Action>;\n};\n\nexport const StepContext = createContext<StepContextType | null>(null);\n\nconst reducer: Reducer<State, Action> = (state, action) => {\n  return state;\n};\n\nexport const StepProvider: React.FC<StepProviderProps> = ({\n  children,\n  CACHE_KEY = \"STEP_STATE_PROVIDER\",\n}) => {\n  const [state, dispatch] = useReducer(reducer, {});\n\n  useEffect(() => {\n    try {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(state));\n    } catch (error) {\n      // Quota limit exceeded or turned off by the user.\n      console.log(\"Error storing state\", error);\n    }\n  }, [state]);\n\n  useEffect(() => {\n    // Hydrate our state from cache.\n    try {\n      const contents = localStorage.getItem(CACHE_KEY);\n      if (contents) {\n        const state = JSON.parse(contents);\n        dispatch({\n          type: ActionTypes.HYDRATE,\n          state,\n        });\n      }\n    } catch (error) {\n      console.log(\"Error hydrating state\", error);\n    }\n  }, []);\n\n  return (\n    <StepContext.Provider value={{ state, dispatch }}>\n      {children}\n    </StepContext.Provider>\n  );\n};\n","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/hooks/step.tsx",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/redux/reducers/index.ts",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/config/form-types.ts",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/form/TextField/index.tsx",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/form/Rating/index.tsx",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/form/TextArea/index.tsx",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/Title/Title.tsx",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/Form/index.ts",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/Form/TextField/index.tsx",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/Form/TextArea/index.tsx",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/Form/Rating/index.tsx",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/Progressindicator/index.tsx",["226"],"import { parse } from \"path\";\nimport React from \"react\";\n\nconst getFloat = (value: string, defaultValue: number = 0.0) =>\n  isNaN(parseFloat(value)) ? defaultValue : parseFloat(value);\n\nconst getPercentage = (current: string, total: string) =>\n  getFloat(current) / getFloat(total);\n\nexport const ProgressIndicator = ({ current, total = \"100\" }) => {\n  const percentage = getPercentage(current, total);\n\n  return (\n    <progress max={total} value={current}>\n      {percentage}\n    </progress>\n  );\n};\n",["227","228"],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/ProgressIndicator/index.tsx",["229"],"import React from \"react\";\nimport styles from \"./progressbar.module.css\";\n\ntype ProgressIndicatorPropTypes = {\n  currentStep: number;\n  numSteps?: number;\n  stepDescriptions: Record<number, string>;\n};\n\nexport const getFloat = (\n  value: string,\n  defaultValue: number = 0.0,\n  toFixed = 2\n) =>\n  isNaN(parseFloat(value))\n    ? defaultValue\n    : parseFloat(parseFloat(value).toFixed(toFixed));\n\nexport const getPercentage = (\n  current: string | number,\n  total: string | number\n) => {\n  const percentage = getFloat(current.toString()) / getFloat(total.toString());\n  return isNaN(percentage) || !isFinite(percentage) ? 0.0 : percentage;\n};\n\nexport const ProgressIndicator: React.FC<ProgressIndicatorPropTypes> = ({\n  currentStep = 1,\n  numSteps = 4,\n  stepDescriptions,\n}) => {\n  const percentage = getPercentage(currentStep, numSteps);\n  return (\n    <div className={styles.progressbar}>\n      {Array.from({ length: numSteps }).map((data, index) => (\n        <div\n          key={`progress-step-block-${index}`}\n          className={`${styles[\"progressbar__block-step\"]} ${\n            index < currentStep && styles[\"progressbar__block-step--completed\"]\n          }`}\n        >\n          Step {index + 1}:{\" \"}\n          {(stepDescriptions && stepDescriptions[index]) || \"\"}\n        </div>\n      ))}\n    </div>\n  );\n};\n","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/redux/selectors/fields.ts",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/redux/selectors/step.ts",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/redux/selectors/index.ts",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/redux/actions/fields.ts",["230"],"import { useCallback } from \"react\";\nimport { ActionTypes } from \"../reducers/step-reducer/step-reducer\";\nimport { useDispatch } from \"react-redux\";\n\n/*\n * Returns a function to save a field value in the redux store.\n */\nexport const useSaveFieldAction = (id: string, fieldKey: string) => {\n  const dispatch = useDispatch();\n  return useCallback(\n    (fieldValue: string) => {\n      console.log(createSaveFieldActionPayload(id, fieldKey, fieldValue));\n      dispatch(createSaveFieldActionPayload(id, fieldKey, fieldValue));\n    },\n    [id, fieldKey]\n  );\n};\n\nexport const createSaveFieldActionPayload = (\n  id: string,\n  fieldKey: string,\n  fieldValue: string\n) => ({\n  type: ActionTypes.SAVE_FORM_FIELD,\n  id,\n  fields: {\n    value: fieldValue,\n    key: fieldKey,\n  },\n});\n","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/redux/actions/index.ts",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/pages/step/step.tsx",["231","232","233","234","235","236","237","238","239","240","241","242"],"import React, { useCallback, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useStepSelector, apiSelector } from \"../../redux/selectors\";\nimport {\n  useCreateReviewAction,\n  useUpdateReviewAction,\n} from \"../../redux/actions\";\nimport { useParams } from \"react-router-dom\";\nimport { FIELDS } from \"../../config/form-types\";\nimport { ProgressIndicator, Title, Button } from \"../../components\";\nimport { StepOne, StepTwo, StepThree, StepFour } from \"../steps\";\nimport { StepDataType } from \"../../redux/reducers/step-reducer/step-reducer\";\nimport { StepPropTypes } from \"../../types/types\";\nimport styles from \"./step.module.css\";\n\n// Setup our route params type\nexport type StepRouteParamsType = {\n  step: string | undefined;\n  id?: string | undefined;\n};\n\n// Create a simple map to connect our step index to a component\nconst StepComponentMap: Readonly<Record<number, React.FC<StepPropTypes>>> = {\n  [0]: StepOne,\n  [1]: StepTwo,\n  [2]: StepThree,\n  [3]: StepFour,\n};\nconst StepDescriptionMap: Readonly<Record<number, string>> = {\n  [0]: \"Title and rating\",\n  [1]: \"Description\",\n  [2]: \"Image and description\",\n  [3]: \"See your review\",\n};\nconst numOfSteps = Object.keys(StepComponentMap).length;\n\nexport const getStepComponent = (index: number) =>\n  StepComponentMap[index] || StepOne;\n\nexport const getStepIndex = (stepIndex: string | undefined) =>\n  Math.max(0, (parseInt(stepIndex || \"0\") || 0) - 1);\n\nconst getField = (state: StepDataType, field: string) =>\n  (state?.fields && state?.fields[field]) || \"\";\n\nexport const getNextPageNumber = (index: number) =>\n  Math.min(numOfSteps, index + 1);\nexport const getPreviousPageNumber = (index: number) => Math.max(0, index - 1);\n\nexport const getFields = (fields: string[], stepState: StepDataType) => {\n  const mappedFields = fields.map((key) => {\n    return {\n      key,\n      value: (stepState?.fields && stepState?.fields[key]) || null,\n    };\n  });\n  if (mappedFields.length) {\n    console.log(mappedFields);\n    return mappedFields.reduce(\n      (acc, field) => ({\n        ...acc,\n        ...(field.value !== null ? { [field.key]: field.value } : {}),\n      }),\n      {}\n    );\n  } else {\n    return {};\n  }\n};\n\n// Return the corresponding component for the current step.\nexport const StepPage: React.FC = () => {\n  const history = useHistory();\n  const params = useParams<StepRouteParamsType>();\n  const updateReview = useUpdateReviewAction();\n  const createReview = useCreateReviewAction();\n  const api = useSelector(apiSelector);\n  const stepState = useStepSelector(params?.id || \"step-one\");\n  const index = getStepIndex(params?.step);\n  const StepComponent = getStepComponent(index);\n  const isButtonDisabled =\n    api.isLoading ||\n    (StepComponent == StepOne &&\n      [FIELDS.TITLE, FIELDS.RATING].filter(\n        (field) => !getField(stepState, field)\n      ).length > 0);\n  const isPreviousButtonVisible = index - 1 > -1;\n  const isNextButtonVisible = index + 1 < numOfSteps;\n\n  const navigateToPage = useCallback(\n    async (index) => {\n      const nextPageNumber = index + 1;\n      try {\n        if (StepComponent === StepOne) {\n          const response = await createReview(\n            getField(stepState, FIELDS.TITLE),\n            getField(stepState, FIELDS.RATING)\n          );\n          if (!response || !response?.data?.id) {\n            throw new Error(\"No ID was returned from the API\");\n          }\n        } else {\n          // Update a review and navigate\n          const isSuccess = await updateReview(\n            getFields(Object.values(FIELDS), stepState)\n          );\n          if (!isSuccess) {\n            throw new Error(\"Could not update the review.\");\n          }\n        }\n        history.push(`/step/${nextPageNumber}/id/${params?.id}`);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    [StepComponent, stepState]\n  );\n\n  const onPressNext = () =>\n    getNextPageNumber(index) !== index &&\n    navigateToPage(getNextPageNumber(index));\n\n  const onPressPrevious = () =>\n    getPreviousPageNumber(index) !== index &&\n    navigateToPage(getPreviousPageNumber(index));\n\n  return (\n    <>\n      <Title>Submit a review</Title>\n      <ProgressIndicator\n        numSteps={numOfSteps}\n        currentStep={index + 1}\n        stepDescriptions={StepDescriptionMap}\n      />\n      <section\n        className={styles.wrapper}\n        data-test-id={`step-component-${index}`}\n      >\n        <StepComponent\n          errorMessage={api?.error?.message || \"\"}\n          isError={!!api?.error}\n          id={params?.id || \"step-one\"}\n        />\n      </section>\n      <nav className={styles.navigation}>\n        <Button\n          isDisabled={isButtonDisabled || !isPreviousButtonVisible}\n          onClick={onPressPrevious}\n        >\n          Previous\n        </Button>\n        <Button\n          isDisabled={isButtonDisabled || !isNextButtonVisible}\n          onClick={onPressNext}\n        >\n          Next\n        </Button>\n      </nav>\n    </>\n  );\n};\n","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/pages/steps/step-one/step-one.tsx",["243","244","245"],"import React, { useCallback } from \"react\";\n// import { useHistory } from \"react-router-dom\";\nimport { Rating, TextField } from \"../../../components\";\nimport { FIELDS, STEPS } from \"../../../config/form-types\";\n// import { ServerResponse } from \"../../redux/reducers/step-reducer\";\nimport { useStepSelector, createUseFieldState } from \"../../../redux/selectors\";\n// import { useCreateReviewAction } from \"../../redux/actions\";\nimport { StepPropTypes } from \"../../../types/types\";\n\nexport const StepOne: React.FC<StepPropTypes> = ({\n  id = \"step-one\",\n  isError = false,\n  errorMessage = \"Oh no an error has occured trying to submit your review.\",\n}) => {\n  const useFieldState = createUseFieldState(id);\n  const [title, setTitle] = useFieldState({\n    fieldKey: FIELDS.TITLE,\n  });\n  const [rating, setRating] = useFieldState({\n    fieldKey: FIELDS.RATING,\n    defaultValue: \"-1\",\n  });\n  return (\n    <aside data-test-id='step-one'>\n      {isError && <span data-test-id='error-message'>{errorMessage}</span>}\n      <Rating\n        label='Rating'\n        data-test-id='rating'\n        selectedRating={rating}\n        onRatingChange={setRating}\n      />\n      <TextField\n        label='Title'\n        placeholder='a great titel e.g. a once in a lifetime product'\n        value={title}\n        onTextChange={setTitle}\n        data-test-id='title'\n      />\n    </aside>\n  );\n};\n",["246","247"],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/pages/steps/step-two/step-two.tsx",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/pages/steps/step-three/step-three.tsx",["248"],"import React, { useEffect, useState } from \"react\";\nimport { FIELDS } from \"../../../config/form-types\";\nimport { createUseFieldState } from \"../../../redux/selectors\";\nimport {\n  TextArea,\n  ImageField,\n  IMAGEFIELD_ERROR_TYPES,\n  ErrorMessage,\n} from \"../../../components\";\nimport { StepPropTypes } from \"../../../types/types\";\nimport styles from \"./step-three.module.css\";\n\nconst ImageErrorMap: Record<string, string> = {\n  [IMAGEFIELD_ERROR_TYPES.FILESIZE]:\n    \"The provided image is too big, please select a smaller image.\",\n  [IMAGEFIELD_ERROR_TYPES.MIME]:\n    \"The provided image has an invalid file format. Please provide a PNG or JPEG image.\",\n  [IMAGEFIELD_ERROR_TYPES.UNKNOWN]:\n    \"An error occured while processing your image. Please try a different image.\",\n};\n\nexport const StepThree: React.FC<StepPropTypes> = ({\n  id = \"step-one\",\n  isError = false,\n  errorMessage = \"Oh no an error has occured trying to submit your review.\",\n}) => {\n  const [imageError, setImageError] = useState(\"\");\n  const useFieldState = createUseFieldState(id);\n  const [image, setImage] = useFieldState({\n    fieldKey: FIELDS.IMAGE,\n  });\n  const [imageDescription, setImageDescription] = useFieldState({\n    fieldKey: FIELDS.IMAGE_DESCRIPTION,\n  });\n\n  return (\n    <section data-test-id='step-three'>\n      <ErrorMessage\n        isVisible={!!imageError || isError}\n        messages={[errorMessage, imageError]}\n      />\n      <div className={styles.wrapper}>\n        <div className={styles.imagefield}>\n          <ImageField\n            label='Select an image'\n            onError={(error) => setImageError(ImageErrorMap[error] || \"\")}\n            value={image}\n            onChange={(image) => {\n              setImageError(\"\");\n              setImage(image);\n            }}\n          />\n        </div>\n        <TextArea\n          label='Please provide a description (optional)'\n          onTextChange={setImageDescription}\n          value={imageDescription}\n        />\n      </div>\n    </section>\n  );\n};\n","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/pages/steps/step-four/step-four.tsx",["249","250"],"import React from \"react\";\nimport { FIELDS } from \"../../../config/form-types\";\nimport { StepDataType } from \"../../../redux/reducers/step-reducer/step-reducer\";\nimport { useStepSelector } from \"../../../redux/selectors\";\nimport { Card } from \"../../../components\";\nimport { StepPropTypes } from \"../../../types/types\";\nimport { getFields } from \"../../step/step\";\nimport styles from \"./step-four.module.css\";\n\nexport const StepFour: React.FC<StepPropTypes> = ({\n  id = \"step-four\",\n  isError = false,\n  errorMessage = \"Oh no an error has occured trying to submit your review.\",\n}) => {\n  const state = useStepSelector(id);\n  return (\n    <aside data-test-id='step-four'>\n      <Card {...getFields(Object.values(FIELDS), state)} />\n    </aside>\n  );\n};\n","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/redux/reducers/step-reducer/step-reducer.ts",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/redux/reducers/api-reducer/api-reducer.ts",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/redux/selectors/api.ts",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/redux/actions/review.ts",["251","252"],"import { useCallback } from \"react\";\nimport { ActionTypes } from \"../reducers/api-reducer/api-reducer\";\nimport { AxiosResponse, AxiosError } from \"axios\";\nimport { client } from \"../../providers/axios\";\nimport { useDispatch } from \"react-redux\";\nimport { FIELDS } from \"../../config/form-types\";\nimport { createSaveFieldActionPayload } from \"./fields\";\n\ntype CreateFinishRequestPropTypes = {\n  data?: AxiosResponse | null;\n  error?: AxiosError | null;\n};\n\nconst createStartRequestPayload = () => ({\n  type: ActionTypes.START_REQUEST,\n});\n\nconst createFinishRequestPayload = ({\n  data = null,\n  error = null,\n}: CreateFinishRequestPropTypes) => ({\n  type: ActionTypes.FINISH_REQUEST,\n  data: data,\n  error: error,\n});\n\nexport const useCreateReviewAction = () => {\n  const dispatch = useDispatch();\n  return useCallback(async (title: string, rating: string) => {\n    console.log(title, rating, \"received\");\n    dispatch(createStartRequestPayload());\n    try {\n      const response = await client().request({\n        url: \"/reviews\",\n        method: \"POST\",\n        data: {\n          title,\n          rating,\n        },\n      });\n      if (response?.data?.id) {\n        console.log(\"title and rating\", title, rating);\n        dispatch(\n          createSaveFieldActionPayload(response?.data?.id, FIELDS.TITLE, title)\n        );\n        dispatch(\n          createSaveFieldActionPayload(\n            response?.data?.id,\n            FIELDS.RATING,\n            rating\n          )\n        );\n      }\n      dispatch(createFinishRequestPayload({ data: response?.data }));\n      return response;\n    } catch (error) {\n      dispatch(createFinishRequestPayload({ error }));\n      return false;\n    }\n  }, []);\n};\n\ntype UpdateReviewActionPropTypes = {\n  title?: string;\n  rating?: string;\n  description?: string;\n  image?: string;\n  imageDescription?: string;\n};\n\nexport const useUpdateReviewAction = () => {\n  const dispatch = useDispatch();\n  return useCallback(async (payload: UpdateReviewActionPropTypes) => {\n    dispatch(createStartRequestPayload());\n    try {\n      await client().request({\n        url: \"/reviews\",\n        method: \"PUT\",\n        data: {\n          ...payload,\n        },\n      });\n      dispatch(createFinishRequestPayload({}));\n      return true;\n    } catch (error) {\n      dispatch(createFinishRequestPayload({ error }));\n      return false;\n    }\n  }, []);\n};\n","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/Button/index.tsx",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/Logo/index.tsx",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/Form/ImageField/index.tsx",["253","254","255"],"import React, { useState } from \"react\";\nimport { Button } from \"../../Button\";\nimport styles from \"./imagefield.module.css\";\n\ntype MimeIdentifierType = {\n  mime: string;\n  pattern: number[];\n  mask: number[];\n};\n\nconst getMimeType = (file: File) =>\n  new Promise((resolve, reject) => {\n    const mimes = [\n      {\n        mime: \"image/jpeg\",\n        pattern: [0xff, 0xd8, 0xff],\n        mask: [0xff, 0xff, 0xff],\n      },\n      {\n        mime: \"image/png\",\n        pattern: [0x89, 0x50, 0x4e, 0x47],\n        mask: [0xff, 0xff, 0xff, 0xff],\n      },\n      // you can expand this list @see https://mimesniff.spec.whatwg.org/#matching-an-image-type-pattern\n    ];\n\n    const check = (bytes: Uint8Array, mime: MimeIdentifierType) => {\n      for (var i = 0, l = mime.mask.length; i < l; ++i) {\n        if ((bytes[i] & mime.mask[i]) - mime.pattern[i] !== 0) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    const blob = file.slice(0, 4); //read the first 4 bytes of the file\n    const reader = new FileReader();\n    reader.onloadend = function (e) {\n      if (\n        e.target?.readyState === FileReader.DONE &&\n        e.target?.result &&\n        typeof e.target?.result !== \"string\"\n      ) {\n        var bytes = new Uint8Array(e.target.result);\n\n        for (var i = 0, l = mimes.length; i < l; ++i) {\n          if (check(bytes, mimes[i])) {\n            resolve(mimes[i].mime);\n            break;\n          }\n        }\n\n        return reject(IMAGEFIELD_ERROR_TYPES.MIME);\n      }\n    };\n    reader.readAsArrayBuffer(blob);\n  });\n\nconst createBase64 = (file: File) =>\n  new Promise<string>((resolve, reject) => {\n    const reader = new FileReader();\n    const onLoad = () => {\n      reader.removeEventListener(\"load\", onLoad, false);\n      if (reader.result) {\n        resolve(reader.result?.toString());\n      } else {\n        reject(\"Cant create Base64\");\n      }\n    };\n    reader.addEventListener(\"load\", onLoad, false);\n    reader.readAsDataURL(file);\n  });\n\nexport enum IMAGEFIELD_ERROR_TYPES {\n  FILESIZE = \"filesize\",\n  MIME = \"mime\",\n  UNKNOWN = \"unknown\",\n}\n\ntype ImageFieldPropTypes = {\n  label: string;\n  value?: string;\n  maxFileSize?: number;\n  onChange: (image: string) => void;\n  onError: (error: string) => void;\n};\n\ntype ImageFieldPreviewPropTypes = {\n  value: string;\n};\n\nexport const ImageFieldPreview: React.FC<ImageFieldPreviewPropTypes> = ({\n  value = \"\",\n  children = null,\n}) => (\n  <div className={styles.imagepreview}>\n    {!!value ? (\n      <img\n        className={styles[\"imagepreview__image\"]}\n        alt='Your uploaded image'\n        src={value}\n      />\n    ) : null}\n    {children}\n  </div>\n);\n\nexport const ImageField: React.FC<ImageFieldPropTypes> = ({\n  label = \"\",\n  value = \"\",\n  maxFileSize = 1048576,\n  onChange = (image: string) => {},\n  onError = (error: string) => {},\n}) => {\n  return (\n    <label className={styles.imagefield}>\n      <span className={styles[\"imagefield__label-text\"]}>{label}</span>\n      <div className={styles[\"imagefield__input-wrapper\"]}>\n        <input\n          type='file'\n          id='multi'\n          className={styles[\"imagefield__input\"]}\n          onChange={async ({ target: { files } }) => {\n            if (files?.length) {\n              const file = files[0];\n              try {\n                if (files[0].size > maxFileSize) {\n                  throw new Error(IMAGEFIELD_ERROR_TYPES.FILESIZE);\n                }\n                const mimeType = await getMimeType(files[0]);\n                if (\n                  ![\"image/jpeg\", \"image/png\"].find(\n                    (validMimeType) => mimeType === validMimeType\n                  )\n                ) {\n                  throw new Error(IMAGEFIELD_ERROR_TYPES.MIME);\n                }\n                const base64Image = await createBase64(file);\n                onChange(base64Image);\n              } catch (error) {\n                if (error === IMAGEFIELD_ERROR_TYPES.MIME) {\n                  onError(IMAGEFIELD_ERROR_TYPES.MIME);\n                } else if (error === IMAGEFIELD_ERROR_TYPES.FILESIZE) {\n                  onError(IMAGEFIELD_ERROR_TYPES.FILESIZE);\n                } else {\n                  onError(IMAGEFIELD_ERROR_TYPES.UNKNOWN);\n                }\n              }\n            }\n          }}\n        />\n        <ImageFieldPreview value={value}>\n          <Button isDisabled={false} onClick={() => {}}>\n            Upload your image here\n          </Button>\n        </ImageFieldPreview>\n      </div>\n    </label>\n  );\n};\n","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/ErrorMessage/index.tsx",[],"/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/Card/index.tsx",["256","257"],"import React from \"react\";\nimport { ImageFieldPreview, Title, Paragraph } from \"../\";\nimport styles from \"./card.module.css\";\n\ntype CardPropTypes = {\n  title: string;\n  rating: string;\n  description: string;\n  image: string;\n  \"image-description\": string;\n};\n\nconst getNumber = (value: string) =>\n  !isNaN(parseInt(value)) ? parseInt(value) : 0;\n\nconst limitWords = (value: string, maxLength: number = 300) =>\n  value.length > maxLength ? `${value.substr(0, maxLength)}...` : value;\n\nexport const Card: React.FC<Partial<CardPropTypes>> = ({\n  title,\n  rating,\n  description,\n  image,\n  \"image-description\": imageDescription,\n}) => (\n  <section className={styles.card}>\n    <div className={styles.imagepreview}>\n      {!!image && (\n        <>\n          <img className={styles[\"imagepreview__image\"]} src={image} />\n          <span className={styles[\"imagepreview__description\"]}>\n            {(imageDescription && limitWords(imageDescription)) || \"\"}\n          </span>\n        </>\n      )}\n    </div>\n    <div className={styles.review}>\n      <div className={styles.review__stars}>\n        {Array.from({ length: getNumber(rating || \"0\") }).map((data, index) => (\n          <React.Fragment key={`rating-star-${index}`}>*</React.Fragment>\n        ))}\n      </div>\n      <Title>{title}</Title>\n      <Paragraph>{description}</Paragraph>\n    </div>\n  </section>\n);\n","/Users/patrickvanderwerf/workspace/abcam/step-by-step-wizard/src/components/Paragraph/index.tsx",[],{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","severity":1,"message":"263","line":3,"column":10,"nodeType":"264","messageId":"265","endLine":3,"endColumn":14},{"ruleId":"266","severity":1,"message":"267","line":5,"column":1,"nodeType":"268","endLine":12,"endColumn":3},{"ruleId":"258","replacedBy":"269"},{"ruleId":"260","replacedBy":"270"},{"ruleId":"258","replacedBy":"271"},{"ruleId":"260","replacedBy":"272"},{"ruleId":"262","severity":1,"message":"273","line":1,"column":8,"nodeType":"264","messageId":"265","endLine":1,"endColumn":13},{"ruleId":"262","severity":1,"message":"274","line":1,"column":27,"nodeType":"264","messageId":"265","endLine":1,"endColumn":36},{"ruleId":"275","severity":1,"message":"276","line":41,"column":6,"nodeType":"277","endLine":41,"endColumn":8,"suggestions":"278"},{"ruleId":"262","severity":1,"message":"279","line":2,"column":10,"nodeType":"264","messageId":"265","endLine":2,"endColumn":23},{"ruleId":"262","severity":1,"message":"280","line":2,"column":25,"nodeType":"264","messageId":"265","endLine":2,"endColumn":35},{"ruleId":"275","severity":1,"message":"281","line":63,"column":6,"nodeType":"277","endLine":63,"endColumn":13,"suggestions":"282"},{"ruleId":"275","severity":1,"message":"281","line":79,"column":6,"nodeType":"277","endLine":79,"endColumn":8,"suggestions":"283"},{"ruleId":"262","severity":1,"message":"284","line":1,"column":10,"nodeType":"264","messageId":"265","endLine":1,"endColumn":15},{"ruleId":"258","replacedBy":"285"},{"ruleId":"260","replacedBy":"286"},{"ruleId":"262","severity":1,"message":"287","line":32,"column":9,"nodeType":"264","messageId":"265","endLine":32,"endColumn":19},{"ruleId":"275","severity":1,"message":"288","line":15,"column":5,"nodeType":"277","endLine":15,"endColumn":19,"suggestions":"289"},{"ruleId":"262","severity":1,"message":"290","line":1,"column":30,"nodeType":"264","messageId":"265","endLine":1,"endColumn":38},{"ruleId":"262","severity":1,"message":"291","line":2,"column":23,"nodeType":"264","messageId":"265","endLine":2,"endColumn":34},{"ruleId":"292","severity":1,"message":"293","line":25,"column":3,"nodeType":"294","messageId":"295","endLine":25,"endColumn":15,"fix":"296"},{"ruleId":"292","severity":1,"message":"297","line":26,"column":3,"nodeType":"294","messageId":"295","endLine":26,"endColumn":15,"fix":"298"},{"ruleId":"292","severity":1,"message":"299","line":27,"column":3,"nodeType":"294","messageId":"295","endLine":27,"endColumn":17,"fix":"300"},{"ruleId":"292","severity":1,"message":"301","line":28,"column":3,"nodeType":"294","messageId":"295","endLine":28,"endColumn":16,"fix":"302"},{"ruleId":"292","severity":1,"message":"293","line":31,"column":3,"nodeType":"294","messageId":"295","endLine":31,"endColumn":26,"fix":"303"},{"ruleId":"292","severity":1,"message":"297","line":32,"column":3,"nodeType":"294","messageId":"295","endLine":32,"endColumn":21,"fix":"304"},{"ruleId":"292","severity":1,"message":"299","line":33,"column":3,"nodeType":"294","messageId":"295","endLine":33,"endColumn":31,"fix":"305"},{"ruleId":"292","severity":1,"message":"301","line":34,"column":3,"nodeType":"294","messageId":"295","endLine":34,"endColumn":25,"fix":"306"},{"ruleId":"307","severity":1,"message":"308","line":84,"column":20,"nodeType":"309","messageId":"310","endLine":84,"endColumn":22},{"ruleId":"275","severity":1,"message":"311","line":117,"column":5,"nodeType":"277","endLine":117,"endColumn":31,"suggestions":"312"},{"ruleId":"262","severity":1,"message":"313","line":1,"column":17,"nodeType":"264","messageId":"265","endLine":1,"endColumn":28},{"ruleId":"262","severity":1,"message":"314","line":4,"column":18,"nodeType":"264","messageId":"265","endLine":4,"endColumn":23},{"ruleId":"262","severity":1,"message":"315","line":6,"column":10,"nodeType":"264","messageId":"265","endLine":6,"endColumn":25},{"ruleId":"258","replacedBy":"316"},{"ruleId":"260","replacedBy":"317"},{"ruleId":"262","severity":1,"message":"274","line":1,"column":17,"nodeType":"264","messageId":"265","endLine":1,"endColumn":26},{"ruleId":"262","severity":1,"message":"318","line":3,"column":10,"nodeType":"264","messageId":"265","endLine":3,"endColumn":22},{"ruleId":"262","severity":1,"message":"319","line":8,"column":8,"nodeType":"264","messageId":"265","endLine":8,"endColumn":14},{"ruleId":"275","severity":1,"message":"288","line":60,"column":6,"nodeType":"277","endLine":60,"endColumn":8,"suggestions":"320"},{"ruleId":"275","severity":1,"message":"288","line":89,"column":6,"nodeType":"277","endLine":89,"endColumn":8,"suggestions":"321"},{"ruleId":"262","severity":1,"message":"290","line":1,"column":17,"nodeType":"264","messageId":"265","endLine":1,"endColumn":25},{"ruleId":"322","severity":1,"message":"323","line":53,"column":23,"nodeType":"264","messageId":"324","endLine":53,"endColumn":45},{"ruleId":"325","severity":1,"message":"326","line":98,"column":7,"nodeType":"327","endLine":102,"endColumn":9},{"ruleId":"262","severity":1,"message":"328","line":2,"column":10,"nodeType":"264","messageId":"265","endLine":2,"endColumn":27},{"ruleId":"329","severity":1,"message":"330","line":30,"column":11,"nodeType":"327","endLine":30,"endColumn":72},"no-native-reassign",["331"],"no-negated-in-lhs",["332"],"@typescript-eslint/no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["331"],["332"],["331"],["332"],"'React' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'client' and 'config'. Either include them or remove the dependency array.","ArrayExpression",["333"],"'AxiosResponse' is defined but never used.","'AxiosError' is defined but never used.","React Hook useEffect has a missing dependency: 'CACHE_KEY'. Either include it or remove the dependency array.",["334"],["335"],"'parse' is defined but never used.",["331"],["332"],"'percentage' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["336"],"'useState' is defined but never used.","'useDispatch' is defined but never used.","no-useless-computed-key","Unnecessarily computed property [0] found.","Property","unnecessarilyComputedProperty",{"range":"337","text":"338"},"Unnecessarily computed property [1] found.",{"range":"339","text":"340"},"Unnecessarily computed property [2] found.",{"range":"341","text":"342"},"Unnecessarily computed property [3] found.",{"range":"343","text":"344"},{"range":"345","text":"338"},{"range":"346","text":"340"},{"range":"347","text":"342"},{"range":"348","text":"344"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useCallback has missing dependencies: 'createReview', 'history', 'params?.id', and 'updateReview'. Either include them or remove the dependency array.",["349"],"'useCallback' is defined but never used.","'STEPS' is defined but never used.","'useStepSelector' is defined but never used.",["331"],["332"],"'StepDataType' is defined but never used.","'styles' is defined but never used.",["350"],["351"],"@typescript-eslint/no-use-before-define","'IMAGEFIELD_ERROR_TYPES' was used before it was defined.","noUseBeforeDefine","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'ImageFieldPreview' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},[988,991],"0",[1004,1007],"1",[1020,1023],"2",[1038,1041],"3",[1121,1124],[1148,1151],[1170,1173],[1202,1205],{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"362","fix":"364"},"Update the dependencies array to be: [client, config]",{"range":"365","text":"366"},"Update the dependencies array to be: [CACHE_KEY, state]",{"range":"367","text":"368"},"Update the dependencies array to be: [CACHE_KEY]",{"range":"369","text":"370"},"Update the dependencies array to be: [id, fieldKey, dispatch]",{"range":"371","text":"372"},"Update the dependencies array to be: [StepComponent, createReview, history, params?.id, stepState, updateReview]",{"range":"373","text":"374"},"Update the dependencies array to be: [dispatch]",{"range":"375","text":"376"},{"range":"377","text":"376"},[1192,1194],"[client, config]",[1251,1258],"[CACHE_KEY, state]",[1628,1630],"[CACHE_KEY]",[535,549],"[id, fieldKey, dispatch]",[3891,3917],"[StepComponent, createReview, history, params?.id, stepState, updateReview]",[1692,1694],"[dispatch]",[2366,2368]]